<%@ Template Language="C#" TargetLanguage="C#" Debug="True" Encoding="UTF-8" %>

<%@ Assembly Src="Model.cs" %>
<%@ Assembly Src="Extensions.cs" %>

<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>

<%@ Import Namespace="SchemaMapper" %>

<%@ Property Name="EntityContext" Type="SchemaMapper.EntityContext"  %>

<%@ Property Name="ContextClassName" Type="System.String"  %>
<%@ Property Name="ContextNamespace" Type="System.String"  %>
<%@ Property Name="EntityNamespace" Type="System.String"  %>
<%@ Property Name="MappingNamespace" Type="System.String"  %>
<%@ Property Name="InterfaceMode" Type="Boolean" Default="False" Optional="True" %>
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
<% if(ContextNamespace != EntityNamespace) { %>
using <%= EntityNamespace %>;
<% }  %>
<% if(ContextNamespace != MappingNamespace) { %>
using <%= MappingNamespace %>;
<% }  %>

namespace <%= ContextNamespace %>
{
<% if (InterfaceMode) { %>
    public partial interface I<%= ContextClassName.ToSafeName() %>
    {

    }
    
<% } // if interface %>    
    public partial class <%= ContextClassName.ToSafeName() %>
    {
        protected void InitializeMapping(DbModelBuilder modelBuilder)
        {

        }
    }
}