//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Petshop.Data.Queries
{
    public static partial class ItemExtensions
    {

        /// <summary>
        /// Gets an instance by the primary key.
        /// </summary>
        public static Petshop.Data.Entities.Item GetByKey(this System.Linq.IQueryable<Petshop.Data.Entities.Item> queryable, string itemId)
        {
            var dbSet = queryable as System.Data.Entity.IDbSet<Petshop.Data.Entities.Item>;
            if (dbSet != null)
                return dbSet.Find(itemId);
                
            return queryable.FirstOrDefault(i => i.ItemId == itemId);
        }

        public static IQueryable<Petshop.Data.Entities.Item> ByProductIdItemIdListPriceAttr1(this IQueryable<Petshop.Data.Entities.Item> queryable, string productId, string itemId, decimal? listPrice, string attr1)
        {
            return queryable.Where(i => i.ProductId == productId
                && i.ItemId == itemId
                && (i.ListPrice == listPrice || (listPrice == null && i.ListPrice == null))
                && (i.Attr1 == attr1 || (attr1 == null && i.Attr1 == null)));
        }

        public static IQueryable<Petshop.Data.Entities.Item> ByProductId(this IQueryable<Petshop.Data.Entities.Item> queryable, string productId)
        {
            return queryable.Where(i => i.ProductId == productId);
        }

        public static IQueryable<Petshop.Data.Entities.Item> BySupplier(this IQueryable<Petshop.Data.Entities.Item> queryable, int? supplier)
        {
            return queryable.Where(i => (i.Supplier == supplier || (supplier == null && i.Supplier == null)));
        }
    }
}
