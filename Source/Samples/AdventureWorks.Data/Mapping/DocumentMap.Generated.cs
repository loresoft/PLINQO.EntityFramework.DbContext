//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace AdventureWorks.Data.Mapping
{
    public partial class DocumentMap
        : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AdventureWorks.Data.Entities.Document>
    {
        public DocumentMap()
        {
            // table
            ToTable("Document", "Production");

            // keys
            HasKey(t => t.DocumentID);

            // Properties
            Property(t => t.DocumentID)
                .HasColumnName("DocumentID")
                .HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity)
                .IsRequired();
            Property(t => t.Title)
                .HasColumnName("Title")
                .HasMaxLength(50)
                .IsRequired();
            Property(t => t.FileName)
                .HasColumnName("FileName")
                .HasMaxLength(400)
                .IsRequired();
            Property(t => t.FileExtension)
                .HasColumnName("FileExtension")
                .HasMaxLength(8)
                .IsRequired();
            Property(t => t.Revision)
                .HasColumnName("Revision")
                .HasMaxLength(5)
                .IsRequired();
            Property(t => t.ChangeNumber)
                .HasColumnName("ChangeNumber")
                .IsRequired();
            Property(t => t.Status)
                .HasColumnName("Status")
                .IsRequired();
            Property(t => t.DocumentSummary)
                .HasColumnName("DocumentSummary")
                .IsOptional();
            Property(t => t.DocumentMember)
                .HasColumnName("Document")
                .IsOptional();
            Property(t => t.ModifiedDate)
                .HasColumnName("ModifiedDate")
                .IsRequired();

            // Relationships
            HasMany(t => t.Products)
                .WithMany(t => t.Documents)
                .Map(m =>
                {
                    m.ToTable("ProductDocument", "Production");
                    m.MapLeftKey("DocumentID");
                    m.MapRightKey("ProductID");
                });

            InitializeMapping();
        }
    }
}
