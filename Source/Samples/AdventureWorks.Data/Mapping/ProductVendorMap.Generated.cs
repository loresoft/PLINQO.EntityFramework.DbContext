//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace AdventureWorks.Data.Mapping
{
    public partial class ProductVendorMap
        : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AdventureWorks.Data.Entities.ProductVendor>
    {
        public ProductVendorMap()
        {
            // table
            ToTable("ProductVendor", "Purchasing");

            // keys
            HasKey(t => new { t.ProductID, t.VendorID });

            // Properties
            Property(t => t.ProductID)
                .HasColumnName("ProductID")
                .HasDatabaseGeneratedOption(DatabaseGeneratedOption.None)
                .IsRequired();
            Property(t => t.VendorID)
                .HasColumnName("VendorID")
                .HasDatabaseGeneratedOption(DatabaseGeneratedOption.None)
                .IsRequired();
            Property(t => t.AverageLeadTime)
                .HasColumnName("AverageLeadTime")
                .IsRequired();
            Property(t => t.StandardPrice)
                .HasColumnName("StandardPrice")
                .HasPrecision(19, 4)
                .IsRequired();
            Property(t => t.LastReceiptCost)
                .HasColumnName("LastReceiptCost")
                .HasPrecision(19, 4)
                .IsOptional();
            Property(t => t.LastReceiptDate)
                .HasColumnName("LastReceiptDate")
                .IsOptional();
            Property(t => t.MinOrderQty)
                .HasColumnName("MinOrderQty")
                .IsRequired();
            Property(t => t.MaxOrderQty)
                .HasColumnName("MaxOrderQty")
                .IsRequired();
            Property(t => t.OnOrderQty)
                .HasColumnName("OnOrderQty")
                .IsOptional();
            Property(t => t.UnitMeasureCode)
                .HasColumnName("UnitMeasureCode")
                .HasMaxLength(3)
                .IsRequired();
            Property(t => t.ModifiedDate)
                .HasColumnName("ModifiedDate")
                .IsRequired();

            // Relationships
            HasRequired(t => t.Product)
                .WithMany(t => t.ProductVendors)
                .HasForeignKey(d => d.ProductID)
                .WillCascadeOnDelete(false);
            HasRequired(t => t.UnitMeasure)
                .WithMany(t => t.ProductVendors)
                .HasForeignKey(d => d.UnitMeasureCode)
                .WillCascadeOnDelete(false);
            HasRequired(t => t.Vendor)
                .WithMany(t => t.ProductVendors)
                .HasForeignKey(d => d.VendorID)
                .WillCascadeOnDelete(false);

            InitializeMapping();
        }
    }
}
