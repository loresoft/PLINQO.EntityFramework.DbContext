//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace AdventureWorks.Data.Mapping
{
    public partial class EmployeeMap
        : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AdventureWorks.Data.Entities.Employee>
    {
        public EmployeeMap()
        {
            // table
            ToTable("Employee", "HumanResources");

            // keys
            HasKey(t => t.EmployeeID);

            // Properties
            Property(t => t.EmployeeID)
                .HasColumnName("EmployeeID")
                .HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity)
                .IsRequired();
            Property(t => t.NationalIDNumber)
                .HasColumnName("NationalIDNumber")
                .HasMaxLength(15)
                .IsRequired();
            Property(t => t.ContactID)
                .HasColumnName("ContactID")
                .IsRequired();
            Property(t => t.LoginID)
                .HasColumnName("LoginID")
                .HasMaxLength(256)
                .IsRequired();
            Property(t => t.ManagerID)
                .HasColumnName("ManagerID")
                .IsOptional();
            Property(t => t.Title)
                .HasColumnName("Title")
                .HasMaxLength(50)
                .IsRequired();
            Property(t => t.BirthDate)
                .HasColumnName("BirthDate")
                .IsRequired();
            Property(t => t.MaritalStatus)
                .HasColumnName("MaritalStatus")
                .HasMaxLength(1)
                .IsRequired();
            Property(t => t.Gender)
                .HasColumnName("Gender")
                .HasMaxLength(1)
                .IsRequired();
            Property(t => t.HireDate)
                .HasColumnName("HireDate")
                .IsRequired();
            Property(t => t.SalariedFlag)
                .HasColumnName("SalariedFlag")
                .IsRequired();
            Property(t => t.VacationHours)
                .HasColumnName("VacationHours")
                .IsRequired();
            Property(t => t.SickLeaveHours)
                .HasColumnName("SickLeaveHours")
                .IsRequired();
            Property(t => t.CurrentFlag)
                .HasColumnName("CurrentFlag")
                .IsRequired();
            Property(t => t.Rowguid)
                .HasColumnName("rowguid")
                .IsRequired();
            Property(t => t.ModifiedDate)
                .HasColumnName("ModifiedDate")
                .IsRequired();

            // Relationships
            HasRequired(t => t.Contact)
                .WithMany(t => t.Employees)
                .HasForeignKey(d => d.ContactID)
                .WillCascadeOnDelete(false);
            HasOptional(t => t.ManagerEmployee)
                .WithMany(t => t.ManagerEmployees)
                .HasForeignKey(d => d.ManagerID)
                .WillCascadeOnDelete(false);

            InitializeMapping();
        }
    }
}
