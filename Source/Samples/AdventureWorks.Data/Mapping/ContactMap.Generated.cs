//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace AdventureWorks.Data.Mapping
{
    public partial class ContactMap
        : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AdventureWorks.Data.Entities.Contact>
    {
        public ContactMap()
        {
            // table
            ToTable("Contact", "Person");

            // keys
            HasKey(t => t.ContactID);

            // Properties
            Property(t => t.ContactID)
                .HasColumnName("ContactID")
                .HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity)
                .IsRequired();
            Property(t => t.NameStyle)
                .HasColumnName("NameStyle")
                .IsRequired();
            Property(t => t.Title)
                .HasColumnName("Title")
                .HasMaxLength(8)
                .IsOptional();
            Property(t => t.FirstName)
                .HasColumnName("FirstName")
                .HasMaxLength(50)
                .IsRequired();
            Property(t => t.MiddleName)
                .HasColumnName("MiddleName")
                .HasMaxLength(50)
                .IsOptional();
            Property(t => t.LastName)
                .HasColumnName("LastName")
                .HasMaxLength(50)
                .IsRequired();
            Property(t => t.Suffix)
                .HasColumnName("Suffix")
                .HasMaxLength(10)
                .IsOptional();
            Property(t => t.EmailAddress)
                .HasColumnName("EmailAddress")
                .HasMaxLength(50)
                .IsOptional();
            Property(t => t.EmailPromotion)
                .HasColumnName("EmailPromotion")
                .IsRequired();
            Property(t => t.Phone)
                .HasColumnName("Phone")
                .HasMaxLength(25)
                .IsOptional();
            Property(t => t.PasswordHash)
                .HasColumnName("PasswordHash")
                .HasMaxLength(128)
                .IsRequired();
            Property(t => t.PasswordSalt)
                .HasColumnName("PasswordSalt")
                .HasMaxLength(10)
                .IsRequired();
            Property(t => t.AdditionalContactInfo)
                .HasColumnName("AdditionalContactInfo")
                .IsOptional();
            Property(t => t.Rowguid)
                .HasColumnName("rowguid")
                .IsRequired();
            Property(t => t.ModifiedDate)
                .HasColumnName("ModifiedDate")
                .IsRequired();

            // Relationships
            HasMany(t => t.CreditCards)
                .WithMany(t => t.Contacts)
                .Map(m =>
                {
                    m.ToTable("ContactCreditCard", "Sales");
                    m.MapLeftKey("ContactID");
                    m.MapRightKey("CreditCardID");
                });

            InitializeMapping();
        }
    }
}
