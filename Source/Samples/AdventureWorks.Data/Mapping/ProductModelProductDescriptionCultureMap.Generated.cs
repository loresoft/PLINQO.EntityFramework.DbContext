//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace AdventureWorks.Data.Mapping
{
    public partial class ProductModelProductDescriptionCultureMap
        : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AdventureWorks.Data.Entities.ProductModelProductDescriptionCulture>
    {
        public ProductModelProductDescriptionCultureMap()
        {
            // table
            ToTable("ProductModelProductDescriptionCulture", "Production");

            // keys
            HasKey(t => new { t.ProductModelID, t.ProductDescriptionID, t.CultureID });

            // Properties
            Property(t => t.ProductModelID)
                .HasColumnName("ProductModelID")
                .HasDatabaseGeneratedOption(DatabaseGeneratedOption.None)
                .IsRequired();
            Property(t => t.ProductDescriptionID)
                .HasColumnName("ProductDescriptionID")
                .HasDatabaseGeneratedOption(DatabaseGeneratedOption.None)
                .IsRequired();
            Property(t => t.CultureID)
                .HasColumnName("CultureID")
                .HasDatabaseGeneratedOption(DatabaseGeneratedOption.None)
                .HasMaxLength(6)
                .IsRequired();
            Property(t => t.ModifiedDate)
                .HasColumnName("ModifiedDate")
                .IsRequired();

            // Relationships
            HasRequired(t => t.Culture)
                .WithMany(t => t.ProductModelProductDescriptionCultures)
                .HasForeignKey(d => d.CultureID)
                .WillCascadeOnDelete(false);
            HasRequired(t => t.ProductDescription)
                .WithMany(t => t.ProductModelProductDescriptionCultures)
                .HasForeignKey(d => d.ProductDescriptionID)
                .WillCascadeOnDelete(false);
            HasRequired(t => t.ProductModel)
                .WithMany(t => t.ProductModelProductDescriptionCultures)
                .HasForeignKey(d => d.ProductModelID)
                .WillCascadeOnDelete(false);

            InitializeMapping();
        }
    }
}
