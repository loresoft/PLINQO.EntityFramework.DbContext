//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace AdventureWorks.Data.Queries
{
    public static partial class ProductModelProductDescriptionCultureExtensions
    {

        /// <summary>
        /// Gets an instance by the primary key.
        /// </summary>
        public static AdventureWorks.Data.Entities.ProductModelProductDescriptionCulture GetByKey(this System.Linq.IQueryable<AdventureWorks.Data.Entities.ProductModelProductDescriptionCulture> queryable, int productModelID, int productDescriptionID, string cultureID)
        {
            var dbSet = queryable as System.Data.Entity.IDbSet<AdventureWorks.Data.Entities.ProductModelProductDescriptionCulture>;
            if (dbSet != null)
                return dbSet.Find(productModelID, productDescriptionID, cultureID);
                
            return queryable.FirstOrDefault(p => p.ProductModelID == productModelID
                && p.ProductDescriptionID == productDescriptionID
                && p.CultureID == cultureID);
        }

        public static IQueryable<AdventureWorks.Data.Entities.ProductModelProductDescriptionCulture> ByProductModelID(this IQueryable<AdventureWorks.Data.Entities.ProductModelProductDescriptionCulture> queryable, int productModelID)
        {
            return queryable.Where(p => p.ProductModelID == productModelID);
        }

        public static IQueryable<AdventureWorks.Data.Entities.ProductModelProductDescriptionCulture> ByProductDescriptionID(this IQueryable<AdventureWorks.Data.Entities.ProductModelProductDescriptionCulture> queryable, int productDescriptionID)
        {
            return queryable.Where(p => p.ProductDescriptionID == productDescriptionID);
        }

        public static IQueryable<AdventureWorks.Data.Entities.ProductModelProductDescriptionCulture> ByCultureID(this IQueryable<AdventureWorks.Data.Entities.ProductModelProductDescriptionCulture> queryable, string cultureID)
        {
            return queryable.Where(p => p.CultureID == cultureID);
        }
    }
}
